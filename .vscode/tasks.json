{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Setup: Install All Dependencies",
      "type": "shell",
      "command": "source .venv/bin/activate && pip install -r backend/requirements.txt && cd frontend && npm install",
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": []
    },
    {
      "label": "Backend: Start Server",
      "type": "shell",
      "command": "source .venv/bin/activate && cd backend && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000",
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "problemMatcher": []
    },
    {
      "label": "Frontend: Start Dev Server",
      "type": "shell",
      "command": "npm start",
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "problemMatcher": []
    },
    {
      "label": "Streamlit: Start Dashboard",
      "type": "shell",
      "command": "source .venv/bin/activate && streamlit run streamlit_app.py --server.port 8501",
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "problemMatcher": []
    },
    {
      "label": "Test: Run All Tests",
      "type": "shell",
      "command": "source .venv/bin/activate && pytest -v -s",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Test: Run Backend Tests",
      "type": "shell",
      "command": "source .venv/bin/activate && pytest backend/tests/ -v -s",
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Test: Run Frontend Tests",
      "type": "shell",
      "command": "npm test",
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "DB: Run Migrations",
      "type": "shell",
      "command": "source .venv/bin/activate && alembic upgrade head",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "DB: Create Migration",
      "type": "shell",
      "command": "source .venv/bin/activate && alembic revision --autogenerate -m '${input:migrationMessage}'",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Lint: Python (Flake8)",
      "type": "shell",
      "command": "source .venv/bin/activate && flake8 backend/app",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Lint: Python (Black)",
      "type": "shell",
      "command": "source .venv/bin/activate && black backend/app --check",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Lint: Frontend (ESLint)",
      "type": "shell",
      "command": "npm run lint",
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Format: Python (Black)",
      "type": "shell",
      "command": "source .venv/bin/activate && black backend/app",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Format: Frontend (Prettier)",
      "type": "shell",
      "command": "npm run lint:fix",
      "options": {
        "cwd": "${workspaceFolder}/frontend"
      },
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Firebase: Deploy",
      "type": "shell",
      "command": "firebase deploy",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Firebase: Emulators Start",
      "type": "shell",
      "command": "firebase emulators:start",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "problemMatcher": [],
      "isBackground": true
    },
    {
      "label": "Docker: Build Backend",
      "type": "shell",
      "command": "docker build -t seatsync-backend ./backend",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Docker: Run Compose",
      "type": "shell",
      "command": "docker-compose up",
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "problemMatcher": [],
      "isBackground": true
    }
  ],
  "inputs": [
    {
      "id": "migrationMessage",
      "type": "promptString",
      "description": "Enter migration message",
      "default": "New migration"
    }
  ]
}
